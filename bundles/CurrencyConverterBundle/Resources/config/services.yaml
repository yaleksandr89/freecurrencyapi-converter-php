parameters:
  currency_converter_bundle.translation_domain: CurrencyConverterBundle
  currency_converter.api_key: '%env(default::CURRENCY_CONVERTER_API_KEY)%'
  currency_converter.api_url: '%env(default::CURRENCY_CONVERTER_API_URL)%'
  env(USE_MOCK_DATA): false
  currency_converter.use_mock_data: '%env(bool:default::USE_MOCK_DATA)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  # Actions
  currency_converter_bundle.action.dashboard:
    class: Bundles\CurrencyConverterBundle\Action\DashboardAction
  currency_converter_bundle.action.list:
    class: Bundles\CurrencyConverterBundle\Action\ListAction
  currency_converter_bundle.action.update_currencies:
    class: Bundles\CurrencyConverterBundle\Action\UpdateAction
  currency_converter_bundle.action.historical_rates:
    class: Bundles\CurrencyConverterBundle\Action\HistoricalRatesAction
  currency_converter_bundle.action.converter:
    class: Bundles\CurrencyConverterBundle\Action\ConverterAction

  # Services
  # Или если задавать имя сервиса (например: currency_converter_bundle.service.currency_api),
  # то нужно прокинуть alias (пример ниже):
  # Bundles\CurrencyConverterBundle\Service\CurrencyApiService:
  #   alias: currency_converter_bundle.service.currency_api
  Bundles\CurrencyConverterBundle\Service\CurrencyApiService:
    arguments:
      - '@http_client'
      - '@logger'
      - '%currency_converter.api_key%'
      - '%currency_converter.api_url%'
      - '%currency_converter.use_mock_data%'

  Bundles\CurrencyConverterBundle\Service\ConverterService:
    arguments:
      - '@Bundles\CurrencyConverterBundle\Repository\CurrencyRepository'

  Bundles\CurrencyConverterBundle\Repository\CurrencyRepository:
    arguments:
      - '@doctrine'
